{"remainingRequest":"/home/martin/Documents/Vue/picasso+router/picasso/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/martin/Documents/Vue/picasso+router/picasso/src/components/CredentialList.vue?vue&type=style&index=0&id=0b2ac545&scoped=true&lang=css&","dependencies":[{"path":"/home/martin/Documents/Vue/picasso+router/picasso/src/components/CredentialList.vue","mtime":1590559151812},{"path":"/home/martin/Documents/Vue/picasso+router/picasso/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/martin/Documents/Vue/picasso+router/picasso/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/martin/Documents/Vue/picasso+router/picasso/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/martin/Documents/Vue/picasso+router/picasso/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/martin/Documents/Vue/picasso+router/picasso/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NyZWRlbnRpYWwtbGlzdCB7CiAgICB3aWR0aDogNTEwcHg7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CgogICAgCn0KCnRhYmxlIHsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogNDVweDsKCn0KdGg6Zmlyc3QtY2hpbGQgewogICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDsKfQoKCgp0ZDpsYXN0LWNoaWxkIHsKICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMHB4Owp9CnRyOmZpcnN0LWNoaWxkIHsKICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7CiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDsKfQp0ciB7CiAgICBmb250LXNpemU6IDE2cHg7Cgp9Cgp0cjpudGgtY2hpbGQob2RkKSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKfSAKdGggewogICAgcGFkZGluZzogMjVweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjU5ODM7CiAgICBmb250LXdlaWdodDogNzAwOwogICAgY29sb3I6ICMyOTQzNGU7Cn0KdGQgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgcGFkZGluZzogMjBweDsKICAgIGNvbG9yOiAjMjk0MzRlOwp9Cgo="},{"version":3,"sources":["CredentialList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CredentialList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"credential-list\" >\n        <table class=\"card\">\n            <tr>\n                <th>Type</th>\n                <th>Domain</th>\n                <th>Hint</th>\n                <th>Edit</th>\n            </tr>\n            <tr v-for=\"(cred,index) in creds\" :key=\"index\">\n                <td>{{cred.type}}</td>\n                <td>{{cred.domain}}</td>\n                <td>{{cred.hint}}</td>\n                <td @click=\"edit(index, $event)\" contenteditable=\"false\"> Edit </td>\n            </tr>\n        </table>\n    </div>\n    \n</template>\n\n<script>\n\nimport axios from \"axios\";\nexport default {\n    name: \"CredentialList\",\n    props: [\"token\"],\n    data() {\n        return {\n            domain: \"\",\n            type: \"\",\n            creds: \"\"\n        };\n    },\n    methods: {\n        edit: function(index) {\n            axios.request({\n                url: 'http://192.168.1.5:5000/credential',\n                method: \"post\",\n                headers: {\n                    \"Authorization\": \"BEARER \"+ this.token,\n                    \"Content-Type\": \"application/json\"\n                },\n                data: {\n                    id: this.creds[index].id,\n                    type: this.creds[index].type,\n                    domain: this.creds[index].domain,\n                    hint: this.creds[index].hint\n                }\n            })\n            .then(resp => {\n                if (resp.status == 200) {\n                    console.log(\"Sucess!\");\n                }\n            });\n        }\n    },\n    created: function() {\n    axios\n      .request({\n        url: \"http://192.168.1.5:5000/credential\",\n        method: \"get\",\n        headers: {\n          Authorization: \"BEARER \" + this.token,\n          \"Content-Type\": \"application/json\"\n        },\n        params: {\n          domain: this.domain,\n          type: this.type\n        }\n      })\n      .then(resp => {\n        if (resp.status == 200) {\n          this.creds = resp.data;\n        }\n      });\n  }\n};\n</script>\n\n<style scoped>\n\n#credential-list {\n    width: 510px;\n    display: flex;\n    justify-content: center;\n\n    \n}\n\ntable {\n    width: 100%;\n    padding: 45px;\n\n}\nth:first-child {\n    border-top-left-radius: 10px;\n}\n\n\n\ntd:last-child {\n    border-bottom-right-radius: 10px;\n}\ntr:first-child {\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n}\ntr {\n    font-size: 16px;\n\n}\n\ntr:nth-child(odd) {\n    background-color: white;\n} \nth {\n    padding: 25px;\n    background-color: #ff5983;\n    font-weight: 700;\n    color: #29434e;\n}\ntd {\n    text-align: center;\n    padding: 20px;\n    color: #29434e;\n}\n\n</style>"]}]}